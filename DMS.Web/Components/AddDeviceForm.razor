@page "/add-device"
@using DMS.Application.Devices
@inject DeviceService DeviceService

<button class="btn btn-primary" @onclick="ShowModal">Add Device</button>

<div class="modal @modalClass" tabindex="-1" aria-labelledby="modalLabel" aria-hidden="true" style="display:@modalDisplay">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalLabel">Add Device Form</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick="HideModal"></button>
            </div>
            <div class="modal-body">
                <EditForm Model="@item" OnValidSubmit="HandleValidSubmit">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="mb-3">
                        <label for="name" class="form-label">Device Name</label>
                        <InputText id="name" class="form-control" @bind-Value="item.Name" />
                    </div>

                    <div class="mb-3">
                        <label for="user" class="form-label">User Name</label>
                        <InputText id="user" class="form-control" @bind-Value="item.UserName" />
                    </div>

                    <div class="mb-3">
                        <label for="serialNumber" class="form-label">Serial Number</label>
                        <InputText id="serialNumber" class="form-control" @bind-Value="item.SerialNumber" />
                    </div>

                    <div class="mb-3">
                        <label for="dayOfPurchase" class="form-label">Day of Purchase</label>
                        <InputDate id="dayOfPurchase" class="form-control" @bind-Value="item.DayOfPurchase" />
                    </div>

                    <div class="mb-3">
                        <label for="releseDate" class="form-label">Release Date</label>
                        <InputDate id="releseDate" class="form-control" @bind-Value="item.ReleseDate" />
                    </div>

                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="alert alert-danger mt-3">
                            @errorMessage
                        </div>
                    }

                    <button type="submit" class="btn btn-primary">Submit</button>
                    <button type="button" class="btn btn-secondary" @onclick="HideModal">Cancel</button>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public EventCallback OnDataChange { get; set; }

    private string modalClass = "";
    private string modalDisplay = "none";
    private string errorMessage = "";

    private DeviceDto item = new DeviceDto();

    private void ShowModal()
    {
        modalClass = "show";
        modalDisplay = "block";
        errorMessage = "";
        item = new DeviceDto(); // Resetujemy model
    }

    private void HideModal()
    {
        modalClass = "";
        modalDisplay = "none";
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            await DeviceService.AddDeviceAsync(item);
            HideModal();
            if (OnDataChange.HasDelegate)
            {
                await OnDataChange.InvokeAsync();
            }
        }
        catch (KeyNotFoundException ex)
        {
            errorMessage = ex.Message;
        }
        catch (Exception ex)
        {
            errorMessage = $"An unexpected error occurred: {ex.Message}";
        }
    }
}
